{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\user\\\\Desktop\\\\NULL_CLASS\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\NULL_CLASS\\\\client\\\\src\\\\components\\\\Comments\\\\Comments.jsx\";\nimport React, { useState } from 'react';\nimport './Comments.css';\nfunction Comments() {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    commentText = _useState2[0],\n    setCommentText = _useState2[1];\n  var handleOnSubmit = function handleOnSubmit(e) {\n    e.prventDefault();\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"comments_sub_form_comments\",\n    onSubmit: handleOnSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    onChange: function onChange(e) {\n      return setCommentText(e.target.value);\n    },\n    placeholder: \"add comment...\",\n    className: \"comment_ibox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"add\",\n    className: \"comment_add_btn_comments\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"display_comment\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }));\n}\nexport default Comments;","map":{"version":3,"names":["React","useState","Comments","_useState","_useState2","_slicedToArray","commentText","setCommentText","handleOnSubmit","e","prventDefault","createElement","Fragment","className","onSubmit","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","target","value","placeholder"],"sources":["C:/Users/user/Desktop/NULL_CLASS/client/src/components/Comments/Comments.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport './Comments.css'\r\n\r\nfunction Comments() {\r\n    const[commentText, setCommentText]=useState(\"\");\r\n    const handleOnSubmit=(e)=>{\r\n        e.prventDefault();\r\n    }\r\n  return (\r\n    <>\r\n    <form className='comments_sub_form_comments' onSubmit={handleOnSubmit}>\r\n        <input type=\"text\" onChange={e=>setCommentText(e.target.value)} placeholder='add comment...' className='comment_ibox'/>\r\n        <input type=\"submit\" value=\"add\" className='comment_add_btn_comments' />\r\n\r\n    </form>\r\n    <div className='display_comment'></div>\r\n      \r\n    </>\r\n  )\r\n}\r\n\r\nexport default Comments\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,gBAAgB;AAEvB,SAASC,QAAQA,CAAA,EAAG;EAAA,IAAAC,SAAA,GACmBF,QAAQ,CAAC,EAAE,CAAC;IAAAG,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAzCG,WAAW,GAAAF,UAAA;IAAEG,cAAc,GAAAH,UAAA;EACjC,IAAMI,cAAc,GAAC,SAAfA,cAAcA,CAAEC,CAAC,EAAG;IACtBA,CAAC,CAACC,aAAa,CAAC,CAAC;EACrB,CAAC;EACH,oBACEV,KAAA,CAAAW,aAAA,CAAAX,KAAA,CAAAY,QAAA,qBACAZ,KAAA,CAAAW,aAAA;IAAME,SAAS,EAAC,4BAA4B;IAACC,QAAQ,EAAEN,cAAe;IAAAO,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAClEpB,KAAA,CAAAW,aAAA;IAAOU,IAAI,EAAC,MAAM;IAACC,QAAQ,EAAE,SAAAA,SAAAb,CAAC;MAAA,OAAEF,cAAc,CAACE,CAAC,CAACc,MAAM,CAACC,KAAK,CAAC;IAAA,CAAC;IAACC,WAAW,EAAC,gBAAgB;IAACZ,SAAS,EAAC,cAAc;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAC,CAAC,eACvHpB,KAAA,CAAAW,aAAA;IAAOU,IAAI,EAAC,QAAQ;IAACG,KAAK,EAAC,KAAK;IAACX,SAAS,EAAC,0BAA0B;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAErE,CAAC,eACPpB,KAAA,CAAAW,aAAA;IAAKE,SAAS,EAAC,iBAAiB;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAM,CAEpC,CAAC;AAEP;AAEA,eAAelB,QAAQ"},"metadata":{},"sourceType":"module"}