{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\user\\\\Desktop\\\\NULL_CLASS\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\Desktop\\\\NULL_CLASS\\\\client\\\\src\\\\components\\\\Comments\\\\Comments.jsx\";\nimport React, { useState } from 'react';\nimport './Comments.css';\nimport DisplayComments from './DisplayComments';\nfunction Comments() {\n  var _this = this;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    commentText = _useState2[0],\n    setCommentText = _useState2[1];\n  var commentsList = [{\n    _id: \"1\",\n    commentBody: \"hello\",\n    userCommented: \"abc\"\n  }, {\n    _id: \"2\",\n    commentBody: \"hi\",\n    userCommented: \"xyz\"\n  }];\n  var handleOnSubmit = function handleOnSubmit(e) {\n    e.preventDefault();\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"comments_sub_form_comments\",\n    onSubmit: handleOnSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    onChange: function onChange(e) {\n      return setCommentText(e.target.value);\n    },\n    placeholder: \"add comment...\",\n    className: \"comment_ibox\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    value: \"add\",\n    className: \"comment_add_btn_comments\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"display_comment_container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }\n  }, commentsList.map(function (m) {\n    return /*#__PURE__*/React.createElement(DisplayComments, {\n      cId: true,\n      commentBody: m.commentBody,\n      userCommented: m.userCommented,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 29\n      }\n    });\n  })));\n}\nexport default Comments;","map":{"version":3,"names":["React","useState","DisplayComments","Comments","_this","_useState","_useState2","_slicedToArray","commentText","setCommentText","commentsList","_id","commentBody","userCommented","handleOnSubmit","e","preventDefault","createElement","Fragment","className","onSubmit","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","target","value","placeholder","map","m","cId"],"sources":["C:/Users/user/Desktop/NULL_CLASS/client/src/components/Comments/Comments.jsx"],"sourcesContent":["import React, { useState } from 'react'\r\nimport './Comments.css'\r\nimport DisplayComments from './DisplayComments';\r\n\r\nfunction Comments() {\r\n    const [commentText, setCommentText] = useState(\"\");\r\n    const commentsList = [\r\n        {\r\n            _id:\"1\",\r\n            commentBody: \"hello\",\r\n            userCommented: \"abc\",\r\n        },\r\n        {\r\n            _id:\"2\",\r\n            commentBody: \"hi\",\r\n            userCommented: \"xyz\",\r\n        },\r\n    ]\r\n    const handleOnSubmit = (e) => {\r\n        e.preventDefault();\r\n    }\r\n    return (\r\n        <>\r\n            <form className='comments_sub_form_comments' onSubmit={handleOnSubmit}>\r\n                <input type=\"text\" onChange={e => setCommentText(e.target.value)} placeholder='add comment...' className='comment_ibox' />\r\n                <input type=\"submit\" value=\"add\" className='comment_add_btn_comments' />\r\n\r\n            </form>\r\n            <div className='display_comment_container'>\r\n                {\r\n                    commentsList.map(m=>{\r\n                        return(\r\n                            <DisplayComments cId commentBody={m.commentBody} userCommented={m.userCommented}/>\r\n                        )\r\n                    })\r\n                }\r\n                \r\n            </div>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Comments\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,gBAAgB;AACvB,OAAOC,eAAe,MAAM,mBAAmB;AAE/C,SAASC,QAAQA,CAAA,EAAG;EAAA,IAAAC,KAAA;EAAA,IAAAC,SAAA,GACsBJ,QAAQ,CAAC,EAAE,CAAC;IAAAK,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA3CG,WAAW,GAAAF,UAAA;IAAEG,cAAc,GAAAH,UAAA;EAClC,IAAMI,YAAY,GAAG,CACjB;IACIC,GAAG,EAAC,GAAG;IACPC,WAAW,EAAE,OAAO;IACpBC,aAAa,EAAE;EACnB,CAAC,EACD;IACIF,GAAG,EAAC,GAAG;IACPC,WAAW,EAAE,IAAI;IACjBC,aAAa,EAAE;EACnB,CAAC,CACJ;EACD,IAAMC,cAAc,GAAG,SAAjBA,cAAcA,CAAIC,CAAC,EAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;EACtB,CAAC;EACD,oBACIhB,KAAA,CAAAiB,aAAA,CAAAjB,KAAA,CAAAkB,QAAA,qBACIlB,KAAA,CAAAiB,aAAA;IAAME,SAAS,EAAC,4BAA4B;IAACC,QAAQ,EAAEN,cAAe;IAAAO,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBAClE1B,KAAA,CAAAiB,aAAA;IAAOU,IAAI,EAAC,MAAM;IAACC,QAAQ,EAAE,SAAAA,SAAAb,CAAC;MAAA,OAAIN,cAAc,CAACM,CAAC,CAACc,MAAM,CAACC,KAAK,CAAC;IAAA,CAAC;IAACC,WAAW,EAAC,gBAAgB;IAACZ,SAAS,EAAC,cAAc;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAAC,eAC1H1B,KAAA,CAAAiB,aAAA;IAAOU,IAAI,EAAC,QAAQ;IAACG,KAAK,EAAC,KAAK;IAACX,SAAS,EAAC,0BAA0B;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,CAAE,CAErE,CAAC,eACP1B,KAAA,CAAAiB,aAAA;IAAKE,SAAS,EAAC,2BAA2B;IAAAE,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAElChB,YAAY,CAACsB,GAAG,CAAC,UAAAC,CAAC,EAAE;IAChB,oBACIjC,KAAA,CAAAiB,aAAA,CAACf,eAAe;MAACgC,GAAG;MAACtB,WAAW,EAAEqB,CAAC,CAACrB,WAAY;MAACC,aAAa,EAAEoB,CAAC,CAACpB,aAAc;MAAAQ,MAAA,EAAAjB,KAAA;MAAAkB,QAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAA,CAAC,CAAC;EAE1F,CAAC,CAGJ,CAEP,CAAC;AAEX;AAEA,eAAevB,QAAQ"},"metadata":{},"sourceType":"module"}